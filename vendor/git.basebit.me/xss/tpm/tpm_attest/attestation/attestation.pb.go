// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: attestation/attestation.proto

package attestation

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetCertsRequest) Reset() {
	*x = GetCertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertsRequest) ProtoMessage() {}

func (x *GetCertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertsRequest.ProtoReflect.Descriptor instead.
func (*GetCertsRequest) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{0}
}

func (x *GetCertsRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetCertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	PlatformCert []byte `protobuf:"bytes,2,opt,name=platformCert,proto3" json:"platformCert,omitempty"`
	EkCert       []byte `protobuf:"bytes,3,opt,name=ekCert,proto3" json:"ekCert,omitempty"`
	EkPub        []byte `protobuf:"bytes,4,opt,name=ekPub,proto3" json:"ekPub,omitempty"`
}

func (x *GetCertsResponse) Reset() {
	*x = GetCertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertsResponse) ProtoMessage() {}

func (x *GetCertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertsResponse.ProtoReflect.Descriptor instead.
func (*GetCertsResponse) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{1}
}

func (x *GetCertsResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetCertsResponse) GetPlatformCert() []byte {
	if x != nil {
		return x.PlatformCert
	}
	return nil
}

func (x *GetCertsResponse) GetEkCert() []byte {
	if x != nil {
		return x.EkCert
	}
	return nil
}

func (x *GetCertsResponse) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

type GetAKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetAKRequest) Reset() {
	*x = GetAKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAKRequest) ProtoMessage() {}

func (x *GetAKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAKRequest.ProtoReflect.Descriptor instead.
func (*GetAKRequest) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{2}
}

func (x *GetAKRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type AK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AkPub             []byte `protobuf:"bytes,1,opt,name=akPub,proto3" json:"akPub,omitempty"`
	Tcsd              bool   `protobuf:"varint,2,opt,name=tcsd,proto3" json:"tcsd,omitempty"`
	CreateData        []byte `protobuf:"bytes,3,opt,name=createData,proto3" json:"createData,omitempty"`
	CreateAttestation []byte `protobuf:"bytes,4,opt,name=createAttestation,proto3" json:"createAttestation,omitempty"`
	CreateSignature   []byte `protobuf:"bytes,5,opt,name=createSignature,proto3" json:"createSignature,omitempty"`
}

func (x *AK) Reset() {
	*x = AK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AK) ProtoMessage() {}

func (x *AK) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AK.ProtoReflect.Descriptor instead.
func (*AK) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{3}
}

func (x *AK) GetAkPub() []byte {
	if x != nil {
		return x.AkPub
	}
	return nil
}

func (x *AK) GetTcsd() bool {
	if x != nil {
		return x.Tcsd
	}
	return false
}

func (x *AK) GetCreateData() []byte {
	if x != nil {
		return x.CreateData
	}
	return nil
}

func (x *AK) GetCreateAttestation() []byte {
	if x != nil {
		return x.CreateAttestation
	}
	return nil
}

func (x *AK) GetCreateSignature() []byte {
	if x != nil {
		return x.CreateSignature
	}
	return nil
}

type GetAKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	EkPub []byte `protobuf:"bytes,2,opt,name=ekPub,proto3" json:"ekPub,omitempty"`
	Ak    *AK    `protobuf:"bytes,3,opt,name=ak,proto3" json:"ak,omitempty"`
}

func (x *GetAKResponse) Reset() {
	*x = GetAKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAKResponse) ProtoMessage() {}

func (x *GetAKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAKResponse.ProtoReflect.Descriptor instead.
func (*GetAKResponse) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{4}
}

func (x *GetAKResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetAKResponse) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

func (x *GetAKResponse) GetAk() *AK {
	if x != nil {
		return x.Ak
	}
	return nil
}

type ChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Credential []byte `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Secret     []byte `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ChallengeRequest) Reset() {
	*x = ChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeRequest) ProtoMessage() {}

func (x *ChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeRequest.ProtoReflect.Descriptor instead.
func (*ChallengeRequest) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{5}
}

func (x *ChallengeRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChallengeRequest) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *ChallengeRequest) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

type ChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Secret []byte `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ChallengeResponse) Reset() {
	*x = ChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeResponse) ProtoMessage() {}

func (x *ChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeResponse.ProtoReflect.Descriptor instead.
func (*ChallengeResponse) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{6}
}

func (x *ChallengeResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChallengeResponse) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

type GetQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nonce []byte `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{7}
}

func (x *GetQuoteRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetQuoteRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpmVersion uint32 `protobuf:"varint,1,opt,name=tpmVersion,proto3" json:"tpmVersion,omitempty"`
	Quote      []byte `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	Signature  []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{8}
}

func (x *Quote) GetTpmVersion() uint32 {
	if x != nil {
		return x.TpmVersion
	}
	return 0
}

func (x *Quote) GetQuote() []byte {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *Quote) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PCR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Digest    []byte `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	DigestAlg uint32 `protobuf:"varint,3,opt,name=digestAlg,proto3" json:"digestAlg,omitempty"`
}

func (x *PCR) Reset() {
	*x = PCR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCR) ProtoMessage() {}

func (x *PCR) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCR.ProtoReflect.Descriptor instead.
func (*PCR) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{9}
}

func (x *PCR) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PCR) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PCR) GetDigestAlg() uint32 {
	if x != nil {
		return x.DigestAlg
	}
	return 0
}

type GetQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TpmVersion uint32   `protobuf:"varint,2,opt,name=tpmVersion,proto3" json:"tpmVersion,omitempty"`
	Public     []byte   `protobuf:"bytes,3,opt,name=public,proto3" json:"public,omitempty"`
	Quotes     []*Quote `protobuf:"bytes,4,rep,name=quotes,proto3" json:"quotes,omitempty"`
	Pcrs       []*PCR   `protobuf:"bytes,5,rep,name=pcrs,proto3" json:"pcrs,omitempty"`
	EventLog   []byte   `protobuf:"bytes,6,opt,name=eventLog,proto3" json:"eventLog,omitempty"`
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetQuoteResponse) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{10}
}

func (x *GetQuoteResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetQuoteResponse) GetTpmVersion() uint32 {
	if x != nil {
		return x.TpmVersion
	}
	return 0
}

func (x *GetQuoteResponse) GetPublic() []byte {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *GetQuoteResponse) GetQuotes() []*Quote {
	if x != nil {
		return x.Quotes
	}
	return nil
}

func (x *GetQuoteResponse) GetPcrs() []*PCR {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (x *GetQuoteResponse) GetEventLog() []byte {
	if x != nil {
		return x.EventLog
	}
	return nil
}

type ShareSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	EncryptedKey []byte `protobuf:"bytes,2,opt,name=encryptedKey,proto3" json:"encryptedKey,omitempty"`
}

func (x *ShareSecretRequest) Reset() {
	*x = ShareSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareSecretRequest) ProtoMessage() {}

func (x *ShareSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareSecretRequest.ProtoReflect.Descriptor instead.
func (*ShareSecretRequest) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{11}
}

func (x *ShareSecretRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ShareSecretRequest) GetEncryptedKey() []byte {
	if x != nil {
		return x.EncryptedKey
	}
	return nil
}

type ShareSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Message []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Cipher  []byte `protobuf:"bytes,3,opt,name=cipher,proto3" json:"cipher,omitempty"`
}

func (x *ShareSecretResponse) Reset() {
	*x = ShareSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestation_attestation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareSecretResponse) ProtoMessage() {}

func (x *ShareSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attestation_attestation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareSecretResponse.ProtoReflect.Descriptor instead.
func (*ShareSecretResponse) Descriptor() ([]byte, []int) {
	return file_attestation_attestation_proto_rawDescGZIP(), []int{12}
}

func (x *ShareSecretResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ShareSecretResponse) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ShareSecretResponse) GetCipher() []byte {
	if x != nil {
		return x.Cipher
	}
	return nil
}

var File_attestation_attestation_proto protoreflect.FileDescriptor

var file_attestation_attestation_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6b, 0x43, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6b, 0x43,
	0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x22, 0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x02,
	0x41, 0x4b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x63, 0x73, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x74, 0x63, 0x73, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x1f, 0x0a,
	0x02, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x4b, 0x52, 0x02, 0x61, 0x6b, 0x22, 0x5c,
	0x0a, 0x10, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x11,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x39, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x70, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x70, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x51, 0x0a, 0x03, 0x50, 0x43, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x41, 0x6c, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x41, 0x6c, 0x67, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x70, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x70, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x63, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x43,
	0x52, 0x52, 0x04, 0x70, 0x63, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x22, 0x4a, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x22,
	0x59, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x32, 0x87, 0x03, 0x0a, 0x0b, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x12, 0x19,
	0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x12, 0x1c, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x1f, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x2f, 0x6a, 0x61,
	0x63, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x70, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_attestation_attestation_proto_rawDescOnce sync.Once
	file_attestation_attestation_proto_rawDescData = file_attestation_attestation_proto_rawDesc
)

func file_attestation_attestation_proto_rawDescGZIP() []byte {
	file_attestation_attestation_proto_rawDescOnce.Do(func() {
		file_attestation_attestation_proto_rawDescData = protoimpl.X.CompressGZIP(file_attestation_attestation_proto_rawDescData)
	})
	return file_attestation_attestation_proto_rawDescData
}

var file_attestation_attestation_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_attestation_attestation_proto_goTypes = []interface{}{
	(*GetCertsRequest)(nil),     // 0: attestation.GetCertsRequest
	(*GetCertsResponse)(nil),    // 1: attestation.GetCertsResponse
	(*GetAKRequest)(nil),        // 2: attestation.GetAKRequest
	(*AK)(nil),                  // 3: attestation.AK
	(*GetAKResponse)(nil),       // 4: attestation.GetAKResponse
	(*ChallengeRequest)(nil),    // 5: attestation.ChallengeRequest
	(*ChallengeResponse)(nil),   // 6: attestation.ChallengeResponse
	(*GetQuoteRequest)(nil),     // 7: attestation.GetQuoteRequest
	(*Quote)(nil),               // 8: attestation.Quote
	(*PCR)(nil),                 // 9: attestation.PCR
	(*GetQuoteResponse)(nil),    // 10: attestation.GetQuoteResponse
	(*ShareSecretRequest)(nil),  // 11: attestation.ShareSecretRequest
	(*ShareSecretResponse)(nil), // 12: attestation.ShareSecretResponse
}
var file_attestation_attestation_proto_depIdxs = []int32{
	3,  // 0: attestation.GetAKResponse.ak:type_name -> attestation.AK
	8,  // 1: attestation.GetQuoteResponse.quotes:type_name -> attestation.Quote
	9,  // 2: attestation.GetQuoteResponse.pcrs:type_name -> attestation.PCR
	0,  // 3: attestation.Attestation.GetCerts:input_type -> attestation.GetCertsRequest
	2,  // 4: attestation.Attestation.GetAK:input_type -> attestation.GetAKRequest
	5,  // 5: attestation.Attestation.Challenge:input_type -> attestation.ChallengeRequest
	7,  // 6: attestation.Attestation.GetQuote:input_type -> attestation.GetQuoteRequest
	11, // 7: attestation.Attestation.ShareSecret:input_type -> attestation.ShareSecretRequest
	1,  // 8: attestation.Attestation.GetCerts:output_type -> attestation.GetCertsResponse
	4,  // 9: attestation.Attestation.GetAK:output_type -> attestation.GetAKResponse
	6,  // 10: attestation.Attestation.Challenge:output_type -> attestation.ChallengeResponse
	10, // 11: attestation.Attestation.GetQuote:output_type -> attestation.GetQuoteResponse
	12, // 12: attestation.Attestation.ShareSecret:output_type -> attestation.ShareSecretResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_attestation_attestation_proto_init() }
func file_attestation_attestation_proto_init() {
	if File_attestation_attestation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_attestation_attestation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestation_attestation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_attestation_attestation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_attestation_attestation_proto_goTypes,
		DependencyIndexes: file_attestation_attestation_proto_depIdxs,
		MessageInfos:      file_attestation_attestation_proto_msgTypes,
	}.Build()
	File_attestation_attestation_proto = out.File
	file_attestation_attestation_proto_rawDesc = nil
	file_attestation_attestation_proto_goTypes = nil
	file_attestation_attestation_proto_depIdxs = nil
}
